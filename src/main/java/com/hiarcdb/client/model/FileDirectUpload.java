/*
 * Hiarc API
 * Welcome to the Hiarc API documentation.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.hiarcdb.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;

/**
 * FileDirectUpload
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-12-01T01:09:47.879763-06:00[America/Chicago]")
public class FileDirectUpload {
  public static final String SERIALIZED_NAME_DIRECT_UPLOAD_URL = "directUploadUrl";
  @SerializedName(SERIALIZED_NAME_DIRECT_UPLOAD_URL)
  private String directUploadUrl;

  public static final String SERIALIZED_NAME_STORAGE_ID = "storageId";
  @SerializedName(SERIALIZED_NAME_STORAGE_ID)
  private String storageId;

  public static final String SERIALIZED_NAME_STORAGE_SERVICE = "storageService";
  @SerializedName(SERIALIZED_NAME_STORAGE_SERVICE)
  private String storageService;

  public static final String SERIALIZED_NAME_EXPIRES_AT = "expiresAt";
  @SerializedName(SERIALIZED_NAME_EXPIRES_AT)
  private OffsetDateTime expiresAt;


  public FileDirectUpload directUploadUrl(String directUploadUrl) {
    
    this.directUploadUrl = directUploadUrl;
    return this;
  }

   /**
   * Get directUploadUrl
   * @return directUploadUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDirectUploadUrl() {
    return directUploadUrl;
  }


  public void setDirectUploadUrl(String directUploadUrl) {
    this.directUploadUrl = directUploadUrl;
  }


  public FileDirectUpload storageId(String storageId) {
    
    this.storageId = storageId;
    return this;
  }

   /**
   * Get storageId
   * @return storageId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getStorageId() {
    return storageId;
  }


  public void setStorageId(String storageId) {
    this.storageId = storageId;
  }


  public FileDirectUpload storageService(String storageService) {
    
    this.storageService = storageService;
    return this;
  }

   /**
   * Get storageService
   * @return storageService
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getStorageService() {
    return storageService;
  }


  public void setStorageService(String storageService) {
    this.storageService = storageService;
  }


  public FileDirectUpload expiresAt(OffsetDateTime expiresAt) {
    
    this.expiresAt = expiresAt;
    return this;
  }

   /**
   * Get expiresAt
   * @return expiresAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getExpiresAt() {
    return expiresAt;
  }


  public void setExpiresAt(OffsetDateTime expiresAt) {
    this.expiresAt = expiresAt;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FileDirectUpload fileDirectUpload = (FileDirectUpload) o;
    return Objects.equals(this.directUploadUrl, fileDirectUpload.directUploadUrl) &&
        Objects.equals(this.storageId, fileDirectUpload.storageId) &&
        Objects.equals(this.storageService, fileDirectUpload.storageService) &&
        Objects.equals(this.expiresAt, fileDirectUpload.expiresAt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(directUploadUrl, storageId, storageService, expiresAt);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FileDirectUpload {\n");
    sb.append("    directUploadUrl: ").append(toIndentedString(directUploadUrl)).append("\n");
    sb.append("    storageId: ").append(toIndentedString(storageId)).append("\n");
    sb.append("    storageService: ").append(toIndentedString(storageService)).append("\n");
    sb.append("    expiresAt: ").append(toIndentedString(expiresAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

