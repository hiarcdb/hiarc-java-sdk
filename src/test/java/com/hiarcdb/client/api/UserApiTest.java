/*
 * Hiarc API
 * Welcome to the Hiarc API documentation.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.hiarcdb.client.api;

import com.hiarcdb.client.ApiException;
import com.hiarcdb.client.model.CreateOrUpdateEntityRequest;
import com.hiarcdb.client.model.CreateUserRequest;
import com.hiarcdb.client.model.FindEntityRequest;
import com.hiarcdb.client.model.FindUsersRequest;
import com.hiarcdb.client.model.Group;
import com.hiarcdb.client.model.UpdateUserRequest;
import com.hiarcdb.client.model.User;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for UserApi
 */
@Ignore
public class UserApiTest {

    private final UserApi api = new UserApi();

    
    /**
     * Create a User
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createUserTest() throws ApiException {
        CreateUserRequest createUserRequest = null;
        User response = api.createUser(createUserRequest);

        // TODO: test validations
    }
    
    /**
     * Delete a User
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteUserTest() throws ApiException {
        String key = null;
        Object response = api.deleteUser(key);

        // TODO: test validations
    }
    
    /**
     * Find a User
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void findUserTest() throws ApiException {
        FindUsersRequest findUsersRequest = null;
        List<User> response = api.findUser(findUsersRequest);

        // TODO: test validations
    }
    
    /**
     * Get all Users
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAllUsersTest() throws ApiException {
        List<User> response = api.getAllUsers();

        // TODO: test validations
    }
    
    /**
     * Get the current User
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCurrentUserTest() throws ApiException {
        String xHiarcUserKey = null;
        User response = api.getCurrentUser(xHiarcUserKey);

        // TODO: test validations
    }
    
    /**
     * Get the Groups for the current User
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getGroupsForCurrentUserTest() throws ApiException {
        String xHiarcUserKey = null;
        List<Group> response = api.getGroupsForCurrentUser(xHiarcUserKey);

        // TODO: test validations
    }
    
    /**
     * Get Groups for a User
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getGroupsForUserTest() throws ApiException {
        String key = null;
        String xHiarcUserKey = null;
        List<Group> response = api.getGroupsForUser(key, xHiarcUserKey);

        // TODO: test validations
    }
    
    /**
     * Get a User
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getUserTest() throws ApiException {
        String key = null;
        User response = api.getUser(key);

        // TODO: test validations
    }
    
    /**
     * Update a User
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateUserTest() throws ApiException {
        String key = null;
        UpdateUserRequest updateUserRequest = null;
        User response = api.updateUser(key, updateUserRequest);

        // TODO: test validations
    }
    
}
